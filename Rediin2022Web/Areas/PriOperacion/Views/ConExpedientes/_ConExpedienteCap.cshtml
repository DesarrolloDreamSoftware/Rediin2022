@using DSEntityNetX.Common.Language
@using DSEntityNetX.Mvc.TagHelpers
@using Rediin2022.Entidades.PriCatalogos
@model EConExpediente

@{
	List<EProcesoOperativoCol> vProcOperColumnas = ViewBag.ProcOperColumnasXTab;
	EConExpValores vValor = null;
	List<List<EProcesoOperativoCol>> vLineas = new List<List<EProcesoOperativoCol>>();
	List<EProcesoOperativoCol> vLinea = null;
	Int32 vCont = 0;
	foreach (EProcesoOperativoCol vColumna in vProcOperColumnas)
	{
		if (vLinea == null)
			vLinea = new List<EProcesoOperativoCol>();

		vLinea.Add(vColumna);
		vCont += vColumna.CapColumnas + vColumna.CapColumnasVacias;
		if (vCont >= 4)
		{
			vCont = 0;
			vLineas.Add(vLinea);
			vLinea = new List<EProcesoOperativoCol>();
		}
	}
	if (vLinea.Count > 0)
		vLineas.Add(vLinea);
}

@if ((Boolean)ViewBag.PrimCap == true)
{
	<div melemento="CapLin">
		<div melemento="CapCol" melem-cols="3">
			<input mval="Model" xval-for="ExpedienteId" xval-enabled="false" />
		</div>
		<div melemento="CapCol" melem-cols="3">
		</div>
		<div melemento="CapCol" melem-cols="3">
		</div>
		<div melemento="CapCol" melem-cols="3">
		</div>
	</div>
}
@foreach (List<EProcesoOperativoCol> vLin in vLineas)
{
	<div melemento="CapLin">
		@foreach (EProcesoOperativoCol vCol in vLin)
		{
			foreach (EConExpValores vVal in Model.Valores)
			{
				if (vVal.ColumnaId == vCol.ColumnaId)
				{
					vValor = vVal;
					break;
				}
			}

			XInputTypes vTipo = XInputTypes.Text;
			if (vCol.Tipo == TiposColumna.Texto)
				vTipo = XInputTypes.Text;
			else if (vCol.Tipo == TiposColumna.Boleano)
				vTipo = XInputTypes.Bool;
			else if (vCol.Tipo == TiposColumna.Entero)
				vTipo = XInputTypes.Int;
			else if (vCol.Tipo == TiposColumna.Importe)
				vTipo = XInputTypes.Dec;
			else if (vCol.Tipo == TiposColumna.Fecha)
				vTipo = XInputTypes.Date;
			else if (vCol.Tipo == TiposColumna.FechaYHora)
				vTipo = XInputTypes.DateTime;
			else if (vCol.Tipo == TiposColumna.Hora)
				vTipo = XInputTypes.Time;

			String vValorCadena = String.Empty;
			if (vValor != null)
			{
				if (vCol.Tipo == TiposColumna.Texto)
					vValorCadena = vValor.ValorTexto;
				else if (vCol.Tipo == TiposColumna.Boleano)
					vValorCadena = vValor.ValorTexto;
				else if (vCol.Tipo == TiposColumna.Entero)
					vValorCadena = String.Format("{0:0}", vValor.ValorNumerico);
				else if (vCol.Tipo == TiposColumna.Importe)
					vValorCadena = String.Format($"{{0:0.{XString.Complement("0", vCol.Decimales)}}}", vValor.ValorNumerico);
				else if (vCol.Tipo == TiposColumna.Fecha)
					vValorCadena = String.Format("{0:dd/MM/yyyy}", vValor.ValorFecha);
				else if (vCol.Tipo == TiposColumna.FechaYHora)
					vValorCadena = String.Format("{0:dd/MM/yyyy HH:mm}", vValor.ValorFecha);
				else if (vCol.Tipo == TiposColumna.Hora)
					vValorCadena = String.Format("{0:HH:mm}", vValor.ValorFecha);
			}

			<div melemento="CapCol" melem-cols="@vCol.CapColumnas * 3">
				@if (vCol.Tipo == TiposColumna.Importe && vCol.Decimales > 0)
				{
					<input mval="@vTipo" id="@vCol.ColumnaId" xval-min="@vCol.CapRangoIni"
			   xval-max="@vCol.CapRangoFin" xval-req="@vCol.CapObligatorio"
			   xval-label="@vCol.Etiqueta" xval-group="@nameof(EConExpediente)"
			   value="@vValorCadena" xval-dec="@vCol.Decimales" />
				}
				else if (vCol.Tipo == TiposColumna.Boleano)
				{
					Boolean vChecado = (vValorCadena ?? String.Empty) == "1";
					<input mval="@vTipo" id="@vCol.ColumnaId" xval-min="@vCol.CapRangoIni"
			   xval-max="@vCol.CapRangoFin" xval-req="@vCol.CapObligatorio"
			   xval-label="@vCol.Etiqueta" xval-group="@nameof(EConExpediente)"
			   value="true" checked="@vChecado" />
				}
				else
				{
					<input mval="@vTipo" id="@vCol.ColumnaId" xval-min="@vCol.CapRangoIni"
			   xval-max="@vCol.CapRangoFin" xval-req="@vCol.CapObligatorio"
			   xval-label="@vCol.Etiqueta" xval-group="@nameof(EConExpediente)"
			   value="@vValorCadena" />
				}
			</div>
			@if (vCol.CapColumnasVacias > 0)
			{
				<div melemento="CapCol" melem-cols="vCol.CapColumnasVacias * 3">
				</div>
			}
		}
	</div>
}
